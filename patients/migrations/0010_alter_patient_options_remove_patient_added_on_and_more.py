# Generated by Django 4.1.6 on 2025-08-21 16:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import patients.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('patients', '0009_alter_patient_mo_delivery'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='patient',
            options={'ordering': ['-created_at', 'baby_name'], 'verbose_name': 'Patient', 'verbose_name_plural': 'Patients'},
        ),
        migrations.RemoveField(
            model_name='patient',
            name='added_on',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='last_edit_on',
        ),
        migrations.AddField(
            model_name='patient',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, help_text='When this record was created', verbose_name='Created At'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='patient',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When this record was last updated', verbose_name='Updated At'),
        ),
        migrations.AlterField(
            model_name='gmassessment',
            name='video_file',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patients.video'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='added_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_added', to=settings.AUTH_USER_MODEL, verbose_name='Added By'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='address',
            field=models.TextField(blank=True, help_text='Complete residential address', null=True, verbose_name='Address'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='antenatal_hx',
            field=models.TextField(blank=True, help_text='Medical history during pregnancy', null=True, verbose_name='Antenatal History'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='apgar_1',
            field=models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=10, help_text='APGAR score assessed at 1 minute after birth (0-10)', validators=[patients.models.validate_apgar_score], verbose_name='APGAR Score at 1 minute'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='apgar_10',
            field=models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=10, help_text='APGAR score assessed at 10 minutes after birth (0-10)', validators=[patients.models.validate_apgar_score], verbose_name='APGAR Score at 10 minutes'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='apgar_5',
            field=models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=10, help_text='APGAR score assessed at 5 minutes after birth (0-10)', validators=[patients.models.validate_apgar_score], verbose_name='APGAR Score at 5 minutes'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='baby_name',
            field=models.CharField(db_index=True, help_text='Full name of the infant', max_length=100, verbose_name="Baby's Name"),
        ),
        migrations.AlterField(
            model_name='patient',
            name='bht',
            field=models.CharField(blank=True, db_index=True, help_text='Bed Head Ticket number - unique hospital identifier', max_length=20, null=True, unique=True, verbose_name='BHT Number'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='birth_weight',
            field=models.PositiveSmallIntegerField(help_text='Weight of the baby at birth in grams (300-8000g)', validators=[patients.models.validate_birth_weight], verbose_name='Birth Weight (grams)'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='disk_no',
            field=models.CharField(blank=True, help_text='Physical disk/file number for record storage', max_length=20, null=True, verbose_name='Disk Number'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='do_admission',
            field=models.DateTimeField(blank=True, db_index=True, help_text='When the patient was admitted to the facility', null=True, verbose_name='Date of Admission'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='do_discharge',
            field=models.DateTimeField(blank=True, db_index=True, help_text='When the patient was discharged from the facility', null=True, verbose_name='Date of Discharge'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='dob_tob',
            field=models.DateTimeField(db_index=True, help_text='Exact date and time when the baby was born', verbose_name='Date and Time of Birth'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='gender',
            field=models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Undefine', 'Undefine')], db_index=True, help_text='Biological sex of the infant', max_length=8, verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='indecation_for_gma',
            field=models.ManyToManyField(blank=True, help_text='Medical indications for General Movement Assessment', to='patients.indicationsforgma', verbose_name='Indications for GMA'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='intranatal_hx',
            field=models.TextField(blank=True, help_text='Medical events during labor and delivery', null=True, verbose_name='Intranatal History'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='last_edit_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_last_edited', to=settings.AUTH_USER_MODEL, verbose_name='Last Edited By'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='length',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Length of the baby at birth in centimeters', null=True, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(70)], verbose_name='Length (cm)'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='mo_delivery',
            field=models.CharField(choices=[('Normal vaginal delivery (NVD)', 'Normal vaginal delivery (NVD)'), ('Assisted vaginal delivery (AVD)', 'Assisted vaginal delivery (AVD)'), ('Forcep delivery', 'Forcep delivery'), ('Vacume delivery', 'Vacume delivery'), ('Emergency LSCS', 'Emergency LSCS'), ('Elective LSCS', 'Elective LSCS'), ('VBAC', 'Vaginal birth after CS (VBAC)'), ('Home delivery', 'Home delivery'), ('Other', 'Other')], default='NVD', help_text='Method by which the baby was delivered', max_length=35, verbose_name='Mode of Delivery'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='moh_area',
            field=models.CharField(blank=True, db_index=True, help_text='Medical Officer of Health administrative area', max_length=255, null=True, verbose_name='MOH Area'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='mother_name',
            field=models.CharField(db_index=True, help_text='Full name of the mother', max_length=100, verbose_name="Mother's Name"),
        ),
        migrations.AlterField(
            model_name='patient',
            name='nnc_no',
            field=models.CharField(blank=True, db_index=True, help_text='National Neonatal Care number', max_length=20, null=True, unique=True, verbose_name='NNC Number'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='ofc',
            field=models.PositiveSmallIntegerField(help_text='Head circumference measurement in centimeters', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(50)], verbose_name='Occipital Frontal Circumference (cm)'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='other_relavent_details',
            field=models.TextField(blank=True, help_text='Any additional medical or social information', null=True, verbose_name='Other Relevant Details'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='pc_no',
            field=models.CharField(blank=True, db_index=True, help_text='Patient Card number', max_length=20, null=True, unique=True, verbose_name='PC Number'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='phm_area',
            field=models.CharField(blank=True, db_index=True, help_text='Public Health Midwife coverage area', max_length=255, null=True, verbose_name='PHM Area'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='pin',
            field=models.CharField(blank=True, db_index=True, help_text='Patient Identification Number', max_length=20, null=True, unique=True, verbose_name='PIN'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='pog_days',
            field=models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6')], default=0, help_text='Additional days beyond completed weeks (0-6)', validators=[patients.models.validate_pog_days], verbose_name='Period of Gestation (Days)'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='pog_wks',
            field=models.PositiveSmallIntegerField(choices=[(20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24'), (25, '25'), (26, '26'), (27, '27'), (28, '28'), (29, '29'), (30, '30'), (31, '31'), (32, '32'), (33, '33'), (34, '34'), (35, '35'), (36, '36'), (37, '37'), (38, '38'), (39, '39'), (40, '40'), (41, '41'), (42, '42')], default=40, help_text='Gestational age in completed weeks (20-44)', validators=[patients.models.validate_pog_weeks], verbose_name='Period of Gestation (Weeks)'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='postnatal_hx',
            field=models.TextField(blank=True, help_text='Medical events and care after birth', null=True, verbose_name='Postnatal History'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='problems',
            field=models.TextField(blank=True, help_text='Current medical problems or concerns', null=True, verbose_name='Medical Problems'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='ptc_no',
            field=models.CharField(blank=True, db_index=True, help_text='Perinatal Transport Card number', max_length=20, null=True, unique=True, verbose_name='PTC Number'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='resuscitated',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether the baby required resuscitation at birth', verbose_name='Required Resuscitation'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='resustn_note',
            field=models.TextField(blank=True, help_text='Detailed notes about resuscitation procedures performed', null=True, verbose_name='Resuscitation Notes'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='tp_lan',
            field=models.CharField(blank=True, help_text='Landline/secondary contact number', max_length=15, null=True, validators=[patients.models.validate_phone_number], verbose_name='Landline Number'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='tp_mobile',
            field=models.CharField(help_text='Primary contact mobile number', max_length=15, validators=[patients.models.validate_phone_number], verbose_name='Primary Mobile Number'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['baby_name', 'mother_name'], name='patient_names_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['dob_tob', 'gender'], name='patient_birth_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['created_at', 'moh_area'], name='patient_location_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['resuscitated', 'birth_weight'], name='patient_risk_idx'),
        ),
        migrations.AddConstraint(
            model_name='patient',
            constraint=models.CheckConstraint(check=models.Q(('birth_weight__gte', 300), ('birth_weight__lte', 8000)), name='valid_birth_weight'),
        ),
        migrations.AddConstraint(
            model_name='patient',
            constraint=models.CheckConstraint(check=models.Q(('pog_wks__gte', 20), ('pog_wks__lte', 44)), name='valid_pog_weeks'),
        ),
        migrations.AddConstraint(
            model_name='patient',
            constraint=models.CheckConstraint(check=models.Q(('pog_days__gte', 0), ('pog_days__lte', 6)), name='valid_pog_days'),
        ),
    ]
