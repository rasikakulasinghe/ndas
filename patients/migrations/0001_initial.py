# Generated by Django 4.1.6 on 2023-05-13 04:12

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ndas.custom_codes.custom_methods


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DiagnosisList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("abr", models.CharField(max_length=6)),
                ("title", models.TextField()),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Help",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "video_1",
                    models.FileField(blank=True, null=True, upload_to="tutorials/"),
                ),
                (
                    "video_2",
                    models.FileField(blank=True, null=True, upload_to="tutorials/"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IndicationsForGMA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=75)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("High", "High"),
                            ("Medium", "Medium"),
                            ("Low", "Low"),
                        ],
                        max_length=6,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("last_edit_on", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gmai_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_edit_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gmai_last_edit_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bht",
                    models.CharField(
                        blank=True, default=None, max_length=20, null=True, unique=True
                    ),
                ),
                (
                    "nnc_no",
                    models.CharField(
                        blank=True, default=None, max_length=20, null=True, unique=True
                    ),
                ),
                (
                    "ptc_no",
                    models.CharField(
                        blank=True, default=None, max_length=20, null=True, unique=True
                    ),
                ),
                (
                    "pc_no",
                    models.CharField(
                        blank=True, default=None, max_length=20, null=True, unique=True
                    ),
                ),
                (
                    "pin",
                    models.CharField(
                        blank=True, default=None, max_length=20, null=True, unique=True
                    ),
                ),
                (
                    "disk_no",
                    models.CharField(
                        blank=True, default=None, max_length=20, null=True
                    ),
                ),
                (
                    "baby_name",
                    models.CharField(max_length=100, verbose_name="Name of the baby"),
                ),
                (
                    "mother_name",
                    models.CharField(max_length=100, verbose_name="Name of the mother"),
                ),
                (
                    "pog_wks",
                    models.SmallIntegerField(
                        choices=[
                            (20, "20"),
                            (21, "21"),
                            (22, "22"),
                            (23, "23"),
                            (24, "24"),
                            (25, "25"),
                            (26, "26"),
                            (27, "27"),
                            (28, "28"),
                            (29, "29"),
                            (30, "30"),
                            (31, "31"),
                            (32, "32"),
                            (33, "33"),
                            (34, "34"),
                            (35, "35"),
                            (36, "36"),
                            (37, "37"),
                            (38, "38"),
                            (39, "39"),
                            (40, "40"),
                            (41, "41"),
                            (42, "42"),
                        ],
                        default="40",
                    ),
                ),
                (
                    "pog_days",
                    models.SmallIntegerField(
                        choices=[
                            (0, "0"),
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                        ],
                        default="0",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Undefine", "Undefine"),
                        ],
                        default="",
                        max_length=8,
                    ),
                ),
                ("dob_tob", models.DateTimeField()),
                (
                    "mo_delivery",
                    models.CharField(
                        choices=[
                            (
                                "Normal vagainal delivery (NVD)",
                                "Normal vagainal delivery (NVD)",
                            ),
                            (
                                "Assisted vaginal delivery (AVD)",
                                "Assisted vaginal delivery (AVD)",
                            ),
                            ("Forcep delivery", "Forcep delivery"),
                            ("Vacume delivery", "Vacume delivery"),
                            ("Emergency LSCS", "Emergency LSCS"),
                            ("Elective LSCS", "Elective LSCS"),
                            ("VBAC", "Vaginal birth after CS (VBAC)"),
                            ("Home delivery", "Home delivery"),
                            ("Other", "Other"),
                        ],
                        default="NVD",
                        max_length=35,
                    ),
                ),
                (
                    "apgar_1",
                    models.SmallIntegerField(
                        choices=[
                            (0, "0"),
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                            (9, "9"),
                            (10, "10"),
                        ],
                        default="10",
                    ),
                ),
                (
                    "apgar_5",
                    models.SmallIntegerField(
                        choices=[
                            (0, "0"),
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                            (9, "9"),
                            (10, "10"),
                        ],
                        default="10",
                    ),
                ),
                (
                    "apgar_10",
                    models.SmallIntegerField(
                        choices=[
                            (0, "0"),
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                            (9, "9"),
                            (10, "10"),
                        ],
                        default="10",
                    ),
                ),
                ("resuscitated", models.BooleanField(default=False)),
                ("resustn_note", models.TextField(blank=True, null=True)),
                ("birth_weight", models.SmallIntegerField(verbose_name="Birth weight")),
                ("length", models.SmallIntegerField(blank=True, null=True)),
                ("ofc", models.SmallIntegerField(verbose_name="OFC")),
                ("address", models.TextField(blank=True, null=True)),
                ("tp_mobile", models.CharField(max_length=15)),
                ("tp_lan", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "moh_area",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "phm_area",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                ("problems", models.TextField(blank=True, default=None, null=True)),
                ("antenatal_hx", models.TextField(blank=True, null=True)),
                ("intranatal_hx", models.TextField(blank=True, null=True)),
                ("postnatal_hx", models.TextField(blank=True, null=True)),
                ("do_admission", models.DateTimeField(blank=True, null=True)),
                ("do_discharge", models.DateTimeField(blank=True, null=True)),
                ("other_relavent_details", models.TextField(blank=True, null=True)),
                ("added_on", models.DateTimeField(auto_now_add=True)),
                ("last_edit_on", models.DateTimeField(auto_now=True, null=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pt_added_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "indecation_for_gma",
                    models.ManyToManyField(
                        to="patients.indicationsforgma",
                        verbose_name="Indications for GMA",
                    ),
                ),
                (
                    "last_edit_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pt_created_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("caption", models.CharField(max_length=75)),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=ndas.custom_codes.custom_methods.get_video_path_file_name,
                    ),
                ),
                ("recorded_on", models.DateField(default=datetime.datetime.now)),
                ("description", models.TextField(blank=True, null=True)),
                ("uploaded_on", models.DateTimeField(auto_now_add=True)),
                ("last_edit_on", models.DateTimeField(blank=True, null=True)),
                (
                    "last_edit_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="video_last_edit_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HINEAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_of_assessment", models.DateTimeField()),
                (
                    "score",
                    models.SmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(78),
                        ],
                        verbose_name="HINE Score",
                    ),
                ),
                ("assessment_done_by", models.CharField(max_length=200)),
                ("comment", models.TextField(blank=True, null=True)),
                ("added_on", models.DateTimeField(auto_now_add=True)),
                ("last_edit_on", models.DateTimeField(auto_now=True, null=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hine_added_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_edit_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hine_created_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GMAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_of_assessment", models.DateTimeField()),
                ("is_assessment_completed", models.BooleanField(default=False)),
                ("diagnosis_other", models.TextField(blank=True, null=True)),
                (
                    "diagnosis_conclution",
                    models.CharField(
                        choices=[("NORMAL", "NORMAL"), ("ABNORMAL", "ABNORMAL")],
                        default="NORMAL",
                        max_length=8,
                        null=True,
                    ),
                ),
                ("managment_plan", models.TextField(blank=True, null=True)),
                ("next_assessment_date", models.DateField(blank=True, null=True)),
                ("parant_informed", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("edit_on", models.DateTimeField(auto_now=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gm_assmnt_created_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("diagnosis", models.ManyToManyField(to="patients.diagnosislist")),
                (
                    "edit_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gm_assmnt_edited_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
                (
                    "video_file",
                    models.OneToOneField(
                        default=0,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.video",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DevelopmentalAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_of_assessment", models.DateTimeField()),
                ("gm_age_from", models.SmallIntegerField(blank=True, null=True)),
                ("gm_age_to", models.SmallIntegerField(blank=True, null=True)),
                ("gm_details", models.TextField(blank=True, null=True)),
                ("fmv_age_from", models.SmallIntegerField(blank=True, null=True)),
                ("fmv_age_to", models.SmallIntegerField(blank=True, null=True)),
                ("fmv_details", models.TextField(blank=True, null=True)),
                ("hsl_age_from", models.SmallIntegerField(blank=True, null=True)),
                ("hsl_age_to", models.SmallIntegerField(blank=True, null=True)),
                ("hsl_details", models.TextField(blank=True, null=True)),
                ("seb_age_from", models.SmallIntegerField(blank=True, null=True)),
                ("seb_age_to", models.SmallIntegerField(blank=True, null=True)),
                ("seb_details", models.TextField(blank=True, null=True)),
                ("assessment_done_by", models.CharField(max_length=200)),
                ("comment", models.TextField(blank=True, null=True)),
                ("added_on", models.DateTimeField(auto_now_add=True)),
                ("last_edit_on", models.DateTimeField(auto_now=True, null=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="da_added_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_edit_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="da_created_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CDICRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assessment_date", models.DateField()),
                ("assessment", models.TextField(blank=True, null=True)),
                ("assessment_done_by", models.TextField(blank=True, null=True)),
                ("is_assessment_completed", models.BooleanField(default=False)),
                ("today_interventions", models.TextField(blank=True, null=True)),
                ("next_appoinment_date", models.DateTimeField()),
                ("next_appoinment_plan", models.TextField(blank=True, null=True)),
                ("is_discharged", models.BooleanField(default=False)),
                ("dishcharged_by", models.TextField(blank=True, null=True)),
                ("dischaged_date", models.DateField()),
                ("discharge_plan", models.TextField(blank=True, null=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("edit_on", models.DateTimeField(auto_now=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cdic_assmnt_created_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "edit_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cdic_assmnt_edited_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bookmark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                (
                    "bookmark_type",
                    models.CharField(
                        choices=[
                            ("Patient", "Patient"),
                            ("Video", "Video"),
                            ("GMA", "GMA"),
                            ("HINE", "HINE"),
                            ("Attachment", "Attachment"),
                            ("DA", "DA"),
                            ("CDICR", "CDICR"),
                        ],
                        default="Video",
                        max_length=10,
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("description", models.TextField(blank=True, null=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("last_edit_on", models.DateTimeField(blank=True, null=True)),
                (
                    "last_edit_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bm_last_edit_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=75)),
                (
                    "attachment",
                    models.FileField(
                        upload_to=ndas.custom_codes.custom_methods.get_attachment_path_file_name
                    ),
                ),
                (
                    "attachment_type",
                    models.CharField(
                        choices=[
                            ("Photo", "Photo"),
                            ("PDF", "PDF"),
                            ("Video", "Video"),
                        ],
                        default="Image",
                        max_length=5,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("uploaded_on", models.DateTimeField(auto_now_add=True)),
                ("last_edit_on", models.DateTimeField(blank=True, null=True)),
                (
                    "last_edit_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachment_last_edit_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
