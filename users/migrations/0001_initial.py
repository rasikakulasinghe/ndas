# Generated by Django 4.1.6 on 2023-05-13 04:12

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import ndas.custom_codes.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="DevoloperContacts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(default="Dr. Rasika Kulasinghe", max_length=100),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="static/image/",
                        validators=[
                            ndas.custom_codes.validators.image_extension_validation
                        ],
                    ),
                ),
                (
                    "qualifications",
                    models.CharField(default="MBBS, HDIT, BIT", max_length=500),
                ),
                (
                    "email",
                    models.CharField(
                        default="rasikakulasinghe@gmail.com", max_length=45
                    ),
                ),
                ("tel_mob", models.CharField(blank=True, max_length=14)),
                ("tel_lan", models.CharField(blank=True, max_length=14)),
                ("facebook", models.CharField(blank=True, max_length=100)),
                ("twitter", models.CharField(blank=True, max_length=100)),
                ("whatsapp", models.CharField(blank=True, max_length=100)),
                ("youtube", models.CharField(blank=True, max_length=100)),
                ("web", models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "possition",
                    models.CharField(
                        choices=[
                            ("Medical Officer", "Medical Officer"),
                            ("Consultant", "Consultant"),
                            ("Registrar", "Registrar"),
                            ("Nursing officer", "Nursing officer"),
                            ("Seniour Registrar", "Seniour Registrar"),
                        ],
                        default="Medical Officer",
                        max_length=17,
                    ),
                ),
                ("tp_mobile_1", models.CharField(max_length=12)),
                ("tp_mobile_2", models.CharField(max_length=12)),
                ("tp_lan_1", models.CharField(max_length=12, null=True)),
                ("tp_lan_2", models.CharField(max_length=12, null=True)),
                ("address_home", models.TextField(blank=True, null=True)),
                ("address_station", models.TextField(blank=True, null=True)),
                ("last_login_device", models.TextField(null=True)),
                (
                    "profile_pic",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_pic/",
                        validators=[
                            ndas.custom_codes.validators.image_extension_validation
                        ],
                    ),
                ),
                ("other", models.TextField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
